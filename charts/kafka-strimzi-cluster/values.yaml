metadataMode: zookeeper
nodePools:
  enabled: false
  controller:
    enabled: false
    jvmOptions:
      "-Xmx": "5g"
      "-Xms": "5g"    
      "-XX":
        "UseG1GC": "true"
        "MaxGCPauseMillis": "20"
        "InitiatingHeapOccupancyPercent": "35"
        "ExplicitGCInvokesConcurrent": "true"       
    resources:
      {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    storage:
      # type: persistent-claim
      # size: 50Gi
      # deleteClaim: true
      # Must be SSD or NVME like storage IOPs is the primary node constraint
      # class:
  kafka:
    jvmOptions:
      "-Xmx": "5g"
      "-Xms": "5g"    
      "-XX":
        "UseG1GC": "true"
        "MaxGCPauseMillis": "20"
        "InitiatingHeapOccupancyPercent": "35"
        "ExplicitGCInvokesConcurrent": "true"     
    template:
      pod: {}

cruiseControl:
  skipHardGoalCheck: false
  brokerCapacity:
    inboundNetwork: 15728640KiB/s
    outboundNetwork: 15728640KiB/s
  goals:
    - NetworkInboundCapacityGoal
    - DiskCapacityGoal
    - RackAwareGoal
    - NetworkOutboundCapacityGoal
    - CpuCapacityGoal
    - ReplicaCapacityGoal
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

topicOperator:
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

userOperator:
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

kafka:
  replicas: 3
  config:
    min.insync.replicas: 2
    default.replication.factor: 3
    offsets.topic.replication.factor: 3
    transaction.state.log.min.isr: 2
    transaction.state.log.replication.factor: 3
    
    # For storage where storage is thin provisioned enable
    # log.preallocate: true
    # background threads include replication for very high throughput increase based on available CPU cores and usage default is 10
    # background.threads: 20
    # num.io.threads increase based on available CPU cores and usage default is 8
    # num.io.threads: 20
    # num.network.threads increase based on available CPU cores and usage default is 3
    # num.network.threads: 6
    # num.replica.fetchers increase based on available CPU cores and usage default is 1
    # num.replica.fetchers: 10

    # replica.socket.receive.buffer.bytes: 65536 increased for higher replication throughput based on memory
    # replica.socket.receive.buffer.bytes: 1000000

    # socket.receive.buffer.bytes: 102400 default setting to -1 to use OS default
    socket.receive.buffer.bytes: -1
    # socket.request.max.bytes: 104857600 default setting to 100MB probably should not change
    # socket.send.buffer.bytes: 102400 default setting to -1 to use OS default
    socket.send.buffer.bytes: -1


  rack:
    enabled: true
    topologyKey: topology.kubernetes.io/zone
  listeners:
    internal:
      plain:
        enabled: false
      tls:
        enabled: true
        certManager:
          enabled: false
          issuerRef:
            name:
            kind: ClusterIssuer
        # secretName:
        authentication:
          enabled: true
          type: tls
  authorization:
    enabled: true
    type: simple
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  storage:
    # type: persistent-claim
    # size: 50Gi
    # deleteClaim: true
    # Must be SSD or NVME like storage IOPs is the primary node constraint
    # class:

  securityContext:
    {}
    # fsGroup: 1000
    # runAsUser: 1000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

zookeeper:
  replicas: 3
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  storage:
    # type: persistent-claim
    # size: 5Gi
    # deleteClaim: true
    # Must be SSD or NVME like storage IOPs is the primary node constraint
    # class:

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  securityContext:
    {}
    # fsGroup: 1000
    # runAsUser: 1000
