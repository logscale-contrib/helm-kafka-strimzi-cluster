apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ include "kafka-strimzi-cluster.fullname" . }}
  labels:
    {{- include "kafka-strimzi-cluster.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.nodePools.enabled}}
    strimzi.io/node-pools: enabled
  {{- else }}
    strimzi.io/node-pools: disabled
  {{- end }}
spec:
  clientCa:
      generateCertificateAuthority: false
  cruiseControl:
    template:
      pod:
        {{- with .Values.cruiseControl.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.cruiseControl.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.cruiseControl.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}
    resources:
      {{- toYaml .Values.cruiseControl.resources | nindent 6 }}
  entityOperator:
    topicOperator:
      {{- with .Values.topicOperator.affinity }}
      affinity:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.topicOperator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.topicOperator.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      resources:
        {{- toYaml .Values.topicOperator.resources | nindent 8 }}
    userOperator:
      {{- with .Values.userOperator.affinity }}
      affinity:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.userOperator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.userOperator.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      resources:
        {{- toYaml .Values.userOperator.resources | nindent 8 }}
  kafka:
  {{- if .Values.nodePools.enabled }}
    replicas: {{ .Values.nodePools.kafka.replicas | default 3 }}
    resources:
      {{- toYaml .Values.kafka.resources | nindent 6 }}
    storage:
      {{- toYaml .Values.kafka.storage | nindent 6 }}
    template:
      pod:
        {{- with .Values.nodePools.kafka.template.pod.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.nodePools.kafka.template.pod.priorityClassName }}
        priorityClassName: {{ .Values.nodePools.kafka.template.pod.priorityClassName }}
        {{- end }}
        {{- with .Values.nodePools.kafka.template.pod.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.nodePools.kafka.template.pod.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.nodePools.kafka.template.pod.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      podDisruptionBudget:
        maxUnavailable: {{ .Values.nodePools.kafka.template.pod.podDisruptionBudget.maxUnavailable | default 0 }}
  {{- else }}
    replicas: {{ .Values.kafka.replicas }}
    resources:
      {{- toYaml .Values.kafka.resources | nindent 6 }}
    storage:
      {{- toYaml .Values.kafka.storage | nindent 6 }}
    template:
      pod:
        {{- with .Values.kafka.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.kafka.priorityClassName }}
        priorityClassName: {{ .Values.kafka.priorityClassName }}
        {{- end }}
        {{- with .Values.kafka.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.kafka.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.kafka.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      podDisruptionBudget:
        maxUnavailable: {{ .Values.kafka.podDisruptionBudget.maxUnavailable | default 0 }}
  {{- end }}
    config:
      min.insync.replicas: 2
      auto.create.topics.enable: {{ .Values.kafka.allowAutoCreate | default false }}
      default.replication.factor: 3
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
      replica.selector.class: org.apache.kafka.common.replica.RackAwareReplicaSelector
    rack:
      topologyKey: topology.kubernetes.io/zone
    listeners:
      {{- if .Values.kafka.listeners.internal.plain.enabled }}
      - name: plain
        port: 9092
        tls: false
        type: internal
      {{- end }}
      {{- if .Values.kafka.listeners.internal.tls.enabled }}
      - name: tls
        port: 9093
        tls: true
        type: internal
        {{- if .Values.kafka.listeners.internal.tls.secretName }}
        configuration:
          brokerCertChainAndKey:
            secretName: {{ .Values.kafka.listeners.internal.tls.secretName }}
            certificate: tls.crt
            key: tls.key
        {{- end }}
        {{- if .Values.kafka.listeners.internal.tls.certManager.enabled }}
        configuration:
          brokerCertChainAndKey:
            secretName: {{ include "kafka-strimzi-cluster.fullname" . }}-listener-internal-tls
            certificate: tls.crt
            key: tls.key
        {{- end }}
        {{- if .Values.kafka.listeners.internal.tls.authentication.enabled }}
        authentication:
          type: {{ .Values.kafka.listeners.internal.tls.authentication.type }}
        {{- end }}
      {{- end }}
    {{- if .Values.kafka.authorization.enabled }}
    authorization:
      type: simple
      superUsers:
        - {{ include "kafka-strimzi-cluster.fullname" . }}-kadmin
    {{- end }}



  zookeeper:
    template:
      pod:
        {{- with .Values.zookeeper.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.zookeeper.priorityClassName }}
        priorityClassName: {{ .Values.zookeeper.priorityClassName }}
        {{- end }}
        {{- with .Values.zookeeper.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.zookeeper.topologySpreadConstraints }}
        topologySpreadConstraints:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.zookeeper.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      podDisruptionBudget:
        maxUnavailable: {{ .Values.zookeeper.podDisruptionBudget.maxUnavailable | default 0 }}
    resources:
      {{- toYaml .Values.zookeeper.resources | nindent 6 }}
    replicas: {{ .Values.zookeeper.replicas }}
    storage:
      {{- toYaml .Values.zookeeper.storage | nindent 6 }}
